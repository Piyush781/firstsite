{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-hrefggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","hrefgglemode","role","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","backgroundColor","heading","value","onChange","event","console","log","target","color","rows","newtext","toUpperCase","toLowerCase","arr","split","i","length","charAt","slice","arr2","join","document","getElementById","select","navigator","clipboard","writeText","defaultProps","abouttext","Alert","capitalize","word","lo","alert","msg","data-bs-dismiss","App","setmode","_useState3","_useState4","setalert","showAlert","message","setTimeout","togglemode","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5f754d96.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <buthrefn className=\"navbar-hrefggler\" type=\"buthrefn\" data-bs-hrefggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"hrefggle navigation\">\r\n      <span className=\"navbar-hrefggler-icon\"></span>\r\n    </buthrefn>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auhref mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-a\" href=\"#\">About</a>\r\n        </li>\r\n         \r\n          </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <buthrefn className=\"btn btn-outline-success\" type=\"submit\">Search</buthrefn>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='ldark'?'light':'dark'}`}>\r\n  <input className=\"form-check-input\" onClick={props.hrefgglemode} type=\"checkbox\" role=\"switch\" aria-checked=\"true\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    abouttext:PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps={\r\n      title : 'Set here',\r\n      abouttext: 'Contact'\r\n};","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleclick=()=>{\r\n        console.log(\"Uppercase is clicked\" +text);\r\n        let newtext=text.toUpperCase();\r\n        setText(newtext);\r\n    }\r\n    const handleloclick=()=>{\r\n        console.log(\"lowercase is clicked\" +text);\r\n        let newtext=text.toLowerCase();\r\n        setText(newtext);\r\n    }    \r\n    const capitallize=()=>{\r\n       const arr=text.split(\" \");\r\n       for(var i=0;i<arr.length;i++)\r\n       {\r\n        arr[i]=arr[i].charAt(0).toUpperCase()+arr[i].slice(1);\r\n       }\r\n       const arr2=arr.join(\" \");\r\n       setText(arr2);\r\n    }    \r\n    const handlechange=(event)=>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handlecopy=()=>{\r\n      console.log(\"I am copy\");\r\n      var text=document.getElementById(\"mytext\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n    }\r\n    const extraspace=()=>{\r\n      let newtext=text.split(/[ ]+/);\r\n      setText(newtext.join(\" \"));\r\n    }\r\n    // this is a important line to use the text in states\r\n    const [text,setText]=useState('Enter the text'); \r\n\r\n    // text=\"sdjhfsdhjf\" this is the wrong way to change the state\r\n\r\n\r\n    // setText(\"sjfkhdsjkds\"); // Correct way to chane the state\r\n  return (\r\n      <>\r\n      \r\n    <div className=\"container\" style={{backgroundColor:props.mode==='dark'?'grey':'white'}}>\r\n        <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handlechange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} id=\"mytext\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-1\" onClick={handleclick}>Convert to the uppercase</button>\r\n    <button className=\"btn btn-primary mx-1\" onClick={handleloclick}>Convert to the Lowercase</button>\r\n    <button className=\"btn btn-primary mx-1\" onClick={capitallize}>Capitalize  text</button>\r\n    <button className=\"btn btn-primary mx-1\" onClick={handlecopy}>Copy</button>\r\n    <button className=\"btn btn-primary mx-1 my-2\" onClick={extraspace}>remove space</button>\r\n    </div>\r\n     <div className=\"container my-3\" style={{backgroundColor:props.mode==='dark'?'grey':'white'}} >\r\n      <h1>Text summary is</h1>\r\n      <p>\r\n        {text.split(\" \").join('').length} words and {text.length} characters\r\n      </p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n     </div>\r\n     </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\n function Alert(props) {\r\n  const capitalize=(word)=>{\r\n    const lo=word.toLowerCase();\r\n    return lo.charAt(0).toUpperCase()+lo.slice(1);\r\n  }\r\n  return (\r\n      \r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{capitalize(props.alert.type)}</strong> :{capitalize(props.alert.msg)}\r\n       <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\"        aria-label=\"Close\"></button>\r\n        </div>\r\n        \r\n     )\r\n     }\r\n\r\nexport default Alert\r\n\r\n","\nimport './App.css';\n// import About from './components/About'; \nimport Navbar from './components/Navbar';\n import TextForm from './components/TextForm';\n import React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n//  } from \"react-router-dom\";\nfunction App() {\n  const [mode,setmode]=useState('light');\nconst [alert,setalert]=useState(null);\n  const showAlert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  }\n  const togglemode=()=>{\n    if(mode==='light')\n    {\n      setmode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title='React App - Dark Mode';\n    }else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title='React App - Light Mode';\n    }\n  }\n  return (\n    <>\n {/* <Router> */}\n {/* <Navbar title=\"sldflsj\" abouttext=\"SERVICES\"/> */}\n<Navbar mode={mode} togglemode={togglemode}/>\n<Alert alert={alert}/>\n<div className=\"container my-6 \">\n         {/* <Routes>\n\n          <Route path=\"/about\" element={<About/>}/> \n          <Route path=\"/home\" element={<TextForm heading=\"Enter the text here\" showAlert={showAlert} mode={mode}/>}/>\n          \n        </Routes> */}\n<TextForm heading=\"Enter the text here\" showAlert={showAlert} mode={mode}/>\n</div>\n {/* </Router> */}\n</>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"sourceRoot":""}